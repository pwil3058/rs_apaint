// Copyright 2021 Peter Williams <pwil3058@gmail.com> <pwil3058@bigpond.net.au>

pub static XPM: &[&str] = &[
    "64 64 12 1",
    "0	c #242424",
    " 	c None",
    "2	c #DB0000",
    "3	c #004900",
    "4	c #00DB00",
    "5	c #000024",
    "6	c #DBDB00",
    "7	c #242449",
    "8	c #00DBDB",
    "9	c #242400",
    "A	c #B6926D",
    "B	c #499249",
    "0000000000000000000000000000                                    ",
    "0222222222222222222222222220                                    ",
    "0222222222222222222222222220             3333333333             ",
    "0222222222222222222222222220             3444444443             ",
    "0222222222222222222222222220            534444444435555555555555",
    "0222222222222222222222222220            534444444436666666666665",
    "0222222222222222222222222220            534444444436666666666665",
    "0222222222222222222222222220            534444444436666666666665",
    "0222222222222222222222222220            534444444436666666666665",
    "0222222222222222222222222220            534444444436666666666665",
    "0222222222222222222227777777777777777777534444444437777666666665",
    "0222222222222222222227888888888888888888834444444438887666666665",
    "0222222222222222222227888888888888888888834444444438887666666665",
    "0222222222222222222227888888888888888888834444444438887666666665",
    "0222222222222222222227888888888888888888834444444438887666666665",
    "0222222222222222222227888888883333333333334444444433333333333335",
    "0222222222222222222227888888883444444444444444444444444444444435",
    "0222222222222222222227888888883444444444444444444444444444444435",
    "022222222222222222222788888888344444444444444444444444444444443 ",
    "022222222222222222222788888888344444444444444444444444444444443 ",
    "022222222222222222222788888888344444444444444444444444444444443 ",
    "022222222222222222222788888888344444444444444444444444444444443 ",
    "022222222222222222222788888888344444444444444444444444444444443 ",
    "022222222222222222222788888888333333333333444444443333333333333 ",
    "0222222222222255555557888888888889AAAAAAA3444444443AAAAAA9      ",
    "022222222222225BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "022222222222225BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "022222222222225BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "022222222222225BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "022222222222225BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "022222222222225BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "022222222222225BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "022222222222225BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "000000000000005BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "              5BBBBBB7888888888889AAAAAAA3444444443AAAAAA9      ",
    "              5BBBBBB7777777777779AAAAAAA3333333333AAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9AAAAAAAAAAAAAAAAAAAAAAA9      ",
    "              5BBBBBBBBBBBBBBBBBB9999999999999999999999999      ",
    "              5BBBBBBBBBBBBBBBBBBBBBB5                          ",
    "              5BBBBBBBBBBBBBBBBBBBBBB5                          ",
    "              5BBBBBBBBBBBBBBBBBBBBBB5                          ",
    "              5BBBBBBBBBBBBBBBBBBBBBB5                          ",
    "              5BBBBBBBBBBBBBBBBBBBBBB5                          ",
    "              5BBBBBBBBBBBBBBBBBBBBBB5                          ",
    "   5555 5555555BB55BBBB55BBB55B55555B5   55    55555   55555    ",
    "  5        5  555555555555555555555555   55    55  5   55   55  ",
    "  5        5    55 5   555  55 55    5  55 5   55  55  55    5  ",
    "   555     5    5  5   5  5 55 55    5  5  5   55  5   55    5  ",
    "     55    5    5  5   5  5 55 55    5  5  5   55555   55    5  ",
    "      55   5   555555  5   555 55    5 555555  55  5   55    5  ",
    "      55   5   5    5  5   555 55   55 5    5  55   5  55   55  ",
    "  55555    5   5    55 5    55 55555   5    55 55   5  55555    ",
    "                                                                ",
];

use pw_gtk_ext::{gdk_pixbuf, gtk};

#[allow(dead_code)]
pub fn pixbuf() -> gdk_pixbuf::Pixbuf {
    gdk_pixbuf::Pixbuf::from_xpm_data(XPM)
}

#[allow(dead_code)]
pub fn sized_pixbuf(size: i32) -> Option<gdk_pixbuf::Pixbuf> {
    pixbuf().scale_simple(size, size, gdk_pixbuf::InterpType::Bilinear)
}

#[allow(dead_code)]
pub fn sized_pixbuf_or(size: i32) -> gdk_pixbuf::Pixbuf {
    if let Some(pixbuf) = sized_pixbuf(size) {
        pixbuf
    } else {
        pixbuf()
    }
}

#[allow(dead_code)]
pub fn image() -> gtk::Image {
    gtk::Image::from_pixbuf(Some(&pixbuf()))
}

#[allow(dead_code)]
pub fn sized_image(size: i32) -> Option<gtk::Image> {
    pixbuf()
        .scale_simple(size, size, gdk_pixbuf::InterpType::Bilinear)
        .map(|pixbuf| gtk::Image::from_pixbuf(Some(&pixbuf)))
}

#[allow(dead_code)]
pub fn sized_image_or(size: i32) -> gtk::Image {
    if let Some(image) = sized_image(size) {
        image
    } else {
        image()
    }
}

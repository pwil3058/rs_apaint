// Copyright 2021 Peter Williams <pwil3058@gmail.com> <pwil3058@bigpond.net.au>

pub static XPM: &[&str] = &[
    "64 64 10 1",
    "0	c #242424",
    " 	c None",
    "2	c #DB0000",
    "3	c #000024",
    "4	c #DBDB00",
    "5	c #242449",
    "6	c #00DBDB",
    "7	c #242400",
    "8	c #B6926D",
    "9	c #499249",
    "0000000000000000000000000000                                    ",
    "0222222222222222222222222220                                    ",
    "0222222222222222222222222220                                    ",
    "0222222222222222222222222220                                    ",
    "0222222222222222222222222220            333333333333333333333333",
    "0222222222222222222222222220            344444444444444444444443",
    "0222222222222222222222222220            344444444444444444444443",
    "0222222222222222222222222220            344444444444444444444443",
    "0222222222222222222222222220            344444444444444444444443",
    "0222222222222222222222222220            344444444444444444444443",
    "0222222222222222222225555555555555555555355555555555555444444443",
    "0222222222222222222225666666666666666666666666666666665444444443",
    "0222222222222222222225666666666666666666666666666666665444444443",
    "0222222222222222222225666666666666666666666666666666665444444443",
    "0222222222222222222225666666666666666666666666666666665444444443",
    "0222222222222222222225666666666666666666666666666666665444444443",
    "0222222222222222222225666666666666666666666666666666665444444443",
    "0222222222222222222225666666666666666666666666666666663333333333",
    "0222222222222222222225666666666666666666666666666666665         ",
    "0222222222222222222225666666666666666666666666666666665         ",
    "0222222222222222222225666666666666666666666666666666665         ",
    "0222222222222222222225666666666667777777777777777777777777      ",
    "0222222222222222222225666666666667888888888888888888888887      ",
    "0222222222222222222225666666666667888888888888888888888887      ",
    "0222222222222233333335666666666667888888888888888888888887      ",
    "0222222222222239999995666666666667888888888888888888888887      ",
    "0222222222222239999995666666666667888888888888888888888887      ",
    "0222222222222239999995666666666667888888888888888888888887      ",
    "0222222222222239999995666666666667888888888888888888888887      ",
    "0222222222222239999995666666666667888888888888888888888887      ",
    "0222222222222239999995666666666667888888888888888888888887      ",
    "0222222222222239999995666666666667888888888888888888888887      ",
    "0222222222222239999995666666666667888888888888888888888887      ",
    "0000000000000039999995666666666667888888888888888888888887      ",
    "              39999995666666666667888888888888888888888887      ",
    "              39999995555555555557888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997888888888888888888888887      ",
    "              39999999999999999997777777777777777777777777      ",
    "              399999999999999999999993                          ",
    "              399999999999999999999993                          ",
    "              399999999999999999999993                          ",
    "              399999999999999999999993                          ",
    "              399999999999999999999993                          ",
    "              399999999999999999999993                          ",
    "   3333 333333399339999339993393333393   33    33333   33333    ",
    "  3        3  333333333333333333333333   33    33  3   33   33  ",
    "  3        3    33 3   333  33 33    3  33 3   33  33  33    3  ",
    "   333     3    3  3   3  3 33 33    3  3  3   33  3   33    3  ",
    "     33    3    3  3   3  3 33 33    3  3  3   33333   33    3  ",
    "      33   3   333333  3   333 33    3 333333  33  3   33    3  ",
    "      33   3   3    3  3   333 33   33 3    3  33   3  33   33  ",
    "  33333    3   3    33 3    33 33333   3    33 33   3  33333    ",
    "                                                                ",
];

use pw_gtk_ext::{gdk_pixbuf, gtk};

#[allow(dead_code)]
pub fn pixbuf() -> gdk_pixbuf::Pixbuf {
    gdk_pixbuf::Pixbuf::from_xpm_data(XPM)
}

#[allow(dead_code)]
pub fn sized_pixbuf(size: i32) -> Option<gdk_pixbuf::Pixbuf> {
    pixbuf().scale_simple(size, size, gdk_pixbuf::InterpType::Bilinear)
}

#[allow(dead_code)]
pub fn sized_pixbuf_or(size: i32) -> gdk_pixbuf::Pixbuf {
    if let Some(pixbuf) = sized_pixbuf(size) {
        pixbuf
    } else {
        pixbuf()
    }
}

#[allow(dead_code)]
pub fn image() -> gtk::Image {
    gtk::Image::from_pixbuf(Some(&pixbuf()))
}

#[allow(dead_code)]
pub fn sized_image(size: i32) -> Option<gtk::Image> {
    pixbuf()
        .scale_simple(size, size, gdk_pixbuf::InterpType::Bilinear)
        .map(|pixbuf| gtk::Image::from_pixbuf(Some(&pixbuf)))
}

#[allow(dead_code)]
pub fn sized_image_or(size: i32) -> gtk::Image {
    if let Some(image) = sized_image(size) {
        image
    } else {
        image()
    }
}
